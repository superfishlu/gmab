name: Create Release

on:
  push:
    tags:
      - 'v*' # This workflow will be triggered when you push a tag that starts with 'v'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # This ensures we fetch all history and tags
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Build package
        run: python -m build
      
      - name: Extract release notes
        id: extract_release_notes
        run: |
          # Extract version from tag (remove 'v' prefix)
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          # Check if CHANGELOG.md exists
          if [ ! -f CHANGELOG.md ]; then
            echo "CHANGELOG.md not found, creating basic release notes"
            echo "## GMAB $VERSION" > release_notes.md
            echo "Release date: $(date +'%Y-%m-%d')" >> release_notes.md
            echo "EOF" >> $GITHUB_ENV
            exit 0
          fi
          
          # Extract release notes from CHANGELOG.md for this version
          # This assumes a markdown format with ## Version headings
          echo "Extracting release notes for version $VERSION from CHANGELOG.md"
          
          # Create a temporary file for the release notes
          touch release_notes.md
          
          # Extract the section for this version (between ## [VERSION] and the next ##)
          VERSION_REGEX="## \[$VERSION\]|\## $VERSION"
          SECTION_START=$(grep -n -E "$VERSION_REGEX" CHANGELOG.md | head -1 | cut -d':' -f1)
          
          if [ -z "$SECTION_START" ]; then
            echo "No section found for version $VERSION in CHANGELOG.md"
            echo "## GMAB $VERSION" > release_notes.md
            echo "Release date: $(date +'%Y-%m-%d')" >> release_notes.md
          else
            NEXT_SECTION=$(tail -n +$SECTION_START CHANGELOG.md | grep -n "^## " | head -2 | tail -1 | cut -d':' -f1)
            
            if [ -z "$NEXT_SECTION" ]; then
              # If this is the last section, extract to the end of the file
              tail -n +$SECTION_START CHANGELOG.md > release_notes.md
            else
              # Calculate the end line for this section
              END_LINE=$((SECTION_START + NEXT_SECTION - 1))
              sed -n "${SECTION_START},${END_LINE}p" CHANGELOG.md > release_notes.md
            fi
          fi
          
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          cat release_notes.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ env.RELEASE_NOTES }}
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
